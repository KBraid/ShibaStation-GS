- type: entity
  name: snouse
  parent: SimpleMobBase
  id: MobSnouse
  description: An abominable merge of the chef's two greatest enemies.
  components:
  - type: Body
    prototype: Mouse
  - type: SurgeryTarget # Shitmed
  - type: UserInterface # Shitmed
    interfaces:
      enum.SurgeryUIKey.Key:
        type: SurgeryBui
  # - type: GhostRole # ShibaStation - Todo; make Snouse ghost role info and stuff
  #   makeSentient: true
  #   allowSpeech: true
  #   allowMovement: true
  #   name: ghost-role-information-mouse-name
  #   description: ghost-role-information-mouse-description
  #   rules: ghost-role-information-freeagent-rules
  # - type: GhostTakeoverAvailable
  - type: Speech
    speechSounds: Squeak
    speechVerb: SmallMob
    allowedEmotes: ['Squeak']
  - type: Sprite
    drawdepth: SmallMobs
    sprite: _ShibaStation/Mobs/Animals/snouse.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: snouse
  - type: Item
    size: Tiny
  - type: Clothing
    quickEquip: false
    sprite: _ShibaStation/Mobs/Animals/snouse.rsi
    slots:
    - HEAD
  - type: NpcFactionMember
    factions:
      - Mouse
  - type: HTN
    rootTask:
      task: MouseCompound
  - type: Physics
  - type: FaxableObject
    insertingState: inserting_mouse
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.2
        density: 100
        mask:
        - SmallMobMask
        layer:
        - SmallMobLayer
  - type: MobState
  - type: Deathgasp
  - type: MobStateActions
    actions:
      Critical:
      - ActionCritSuccumb
      - ActionCritFakeDeath
      - ActionCritLastWords
  - type: MobThresholds
    thresholds:
      0: Alive
      10: Critical
      20: Dead
  - type: MovementSpeedModifier
    baseWalkSpeed : 2
    baseSprintSpeed : 3
  - type: DamageStateVisuals
    states:
      Alive:
        Base: snouse
      Critical:
        Base: dead
      Dead:
        Base: splat
  - type: Food
  - type: FlavorProfile
    flavors:
    - meaty
  - type: Thirst
    startingThirst: 25  # spawn with Okay thirst state
    thresholds:
      OverHydrated: 35
      Okay: 25
      Thirsty: 15
      Parched: 10
      Dead: 0
    baseDecayRate: 0.04
  - type: Hunger
    thresholds:
      Overfed: 35
      Okay: 25
      Peckish: 15
      Starving: 10
      Dead: 0
    baseDecayRate: 0.5 # I'm very hungry! Give me. The cheese.
  - type: Extractable
    grindableSolutionName: food
  - type: SolutionContainerManager
    solutions:
      food:
        reagents:
        - ReagentId: UncookedAnimalProteins
          Quantity: 3
  - type: Butcherable
    spawned:
    - id: FoodMeatRat
      amount: 1
  - type: ReplacementAccent
    accent: mouse
  - type: Tag
    tags:
    - Trash
    - VimPilot
    - ChefPilot
    - Mouse
    - Meat
  - type: Respirator
    damage:
      types:
        Asphyxiation: 0.25
    damageRecovery:
      types:
        Asphyxiation: -0.25
  - type: Barotrauma
    damage:
      types:
        Blunt: 0.1
  - type: Vocal
    sounds:
      Male: Mouse
      Female: Mouse
      Unsexed: Mouse
    wilhelmProbability: 0.001
  # TODO: Remove CombatMode when Prototype Composition is added
  - type: CombatMode
  - type: MeleeWeapon
    soundHit:
      path: /Audio/Effects/bite.ogg
    angle: 0
    animation: WeaponArcBite
    damage:
      types:
        Piercing: 0
  - type: Bloodstream
    bloodMaxVolume: 50
  - type: CanEscapeInventory
  - type: MobPrice
    price: 50
  - type: BadFood
  - type: NonSpreaderZombie
  - type: FireVisuals
    sprite: Mobs/Effects/onfire.rsi
    normalState: Mouse_burning
  - type: FoodSequenceElement
    sprite:
      sprite: Mobs/Animals/mouse.rsi
      state: dead-0
    entries:
      burger:
        name: food-sequence-burger-content-rat
      taco:
        name: food-sequence-content-rat
      skewer:
        name: food-sequence-content-rat
        sprite:
          sprite: Objects/Consumable/Food/skewer.rsi
          state: skewer-rat
  - type: NightVision # Goobstation - Nigthvision
    color: "#808080"
    activateSound: null
    deactivateSound: null
  - type: Reactive # ShibaStation - part snail, so get hurt by salt
    reactions:
    - reagents: [TableSalt, Saline]
      methods: [Touch, Ingestion, Injection]
      effects:
      - !type:HealthChange
        scaleByQuantity: true
        damage:
          types:
            Caustic: 1
      - !type:PopupMessage
        type: Local
        visualType: Large
        messages: [ "snail-hurt-by-salt-popup" ]
        probability: 0.66
